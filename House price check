import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, r2_score

Load dataset
df = pd.read_csv("house_prices.csv")

Features & target
X = df.drop("Price", axis=1)
y = df["Price"]
Categorical & numerical columns
cat_features = ["Location"]
num_features = ["Bedrooms", "Area_sqft"]

Preprocessing
preprocessor = ColumnTransformer([
    ("num", StandardScaler(), num_features),
    ("cat", OneHotEncoder(drop="first"), cat_features)
])

Build pipeline
model = Pipeline([
    ("prep", preprocessor),
    ("reg", LinearRegression())
])

Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

Train model
model.fit(X_train, y_train)

Predict
y_pred = model.predict(X_test)

Evaluate
print("MAE:", mean_absolute_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))
```
